steps:

- id: 'rebuild-node-files'
  name: 'gcr.io/cloud-builders/npm'
  entrypoint: 'bash'
  args:
  - '-c' # pass what follows as a command to bash
  - |
    echo '{ "commitID":"$COMMIT_SHA", "buildID":"$BUILD_ID"}' > buildDetails

- id: 'Create Container'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--tag=gcr.io/$_IMAGE_REPO/peacepinot:$BUILD_ID', '.']

- id: 'Push Container to Staging registry'
  name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$_IMAGE_REPO/peacepinot:$BUILD_ID"]

- id: 'Deploy to K8s'
  name: 'gcr.io/cloud-builders/kubectl'
  waitFor: ['Push to GCR Container Registry']
  args:
  - 'set'
  - 'image'
  - 'deployment/frontend'
  - 'webserver=gcr.io/$_IMAGE_REPO/peacepinot:$BUILD_ID'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=$_CLOUDSDK_COMPUTE_ZONE'
  - 'CLOUDSDK_CONTAINER_CLUSTER=$_CLOUDSDK_CONTAINER_CLUSTER'
  - 'CLOUDSDK_CORE_PROJECT=$_CLOUDSDK_CORE_PROJECT'

  



   #Push container to AWS EKS
- name: 'gcr.io/bkauf-cloud-build/panick-aws-tools'
  id: 'Deploy to EKS'
  waitFor: ['Push to GCR Container Registry']
  entrypoint: 'sh'
    args:
    - -xe
    - -c
    - |
       export AWS_ACCESS_KEY_ID=AKIAY47XAHKDEGVY3BUP
       export AWS_SECRET_ACCESS_KEY=$$AWS_SECRET_KEY
       export AWS_DEFAULT_REGION=us-west-2
       aws s3 cp file-to-upload.txt s3://nickpan-s3-bucket/file-to-upload.txt
       aws eks update-kubeconfig --name eksworkshop-eksctl # this updates kubeconfig to pull iam tokens using aws-cli
       kubectl set image deployment/frontend-production webserver=gcr.io/$_IMAGE_REPO/gcpdemo:$BUILD_ID
  secretEnv: ['AWS_SECRET_KEY']

  secrets:
  - kmsKeyName: projects/bkauf-cloud-build/locations/global/keyRings/multi-cloud-demo-keyring/cryptoKeys/primary-key
    secretEnv:
      AWS_SECRET_KEY: 'CiQApb8sr/+aL/7E6PZXsrz9mkCiLs12HBV3mez9bypm1v765vgSUQCNUYOTKQidaT62K5DLI86warbBSWcQXVGQeiqexEAzHTEFhxs5WB5gntolN9tdogNgFgh1VvXsAJ2/l3qJXz7H1CvX13Z13CwH+pBDxZgOYA=='
  options:
   machineType: 'N1_HIGHCPU_8'
   diskSizeGb: 200
